vignette("foreach")
list.ex <- list(mean = 2, sd = 4)
stopifnot(length(.actual) == 2 & is.list(.actual) & names(.actual) %in% c("mean", "sd"))
library(test_that)
library(testthat)
source('C:/Users/a421356/R-GitHub/SCsim/R/destObject.R')
.dest <- setRefClass(
"destination",
fields = list(
date = "numeric",
name = vector("character", length = 1),
region = vector("character", length = 1),
on_hand_inventory = "numeric",
actual_demand = "numeric",
expected_demand = "numeric",
forecast_error = "numeric",
pipeline_target = "numeric",
in_transit_order = "numeric",
demand_order = "numeric",
operating_schedule = "logical",
order_schedule = "logical",
orders_per_week = "numeric",
strategy = "character",
disruption = "logical",
order_volume = "numeric",
release_date = "numeric",
delivered = "logical",
in_transit_volume = "numeric",
shipment_size = "numeric",
transit_time = "matrix"
)
source('C:/Users/a421356/R-GitHub/SCsim/R/destObject.R')
list.ex <- list(mean = 2, sd = 4)
getwd()
source(file.path(getwd(), 'R', '/destObject.R'))
source(file.path(getwd(), 'R', 'destObject.R'))
c(1, numeric(10))
length(c(1, numeric(10)))
source('C:/Users/a421356/R-GitHub/SCsim/R/destObject.R')
library(testthat)
source(file.path(getwd(), 'R', 'destObject.R'))
days.ex <- 100
char.pass.ex <- "test"
char.fail.ex <- 2
list.pass.ex <- list(mean = 2, sd = 4)
list.fail.ex <- list(mn = 2, stdev = 4)
numvec.pass.ex <- rep(x = 10, times = days.ex)
numvec.fail.ex <- rep(x = 10, times = (days.ex + 10))
expect_that(
destination(.days = days.ex, .name = char.pass.ex, .region = char.pass.ex,
.actual = list.pass.ex, .expected = list.pass.ex), is_true())
expect_that(
destination(.days = days.ex, .name = char.pass.ex, .region = char.pass.ex,
.actual = list.pass.ex, .expected = list.pass.ex),
is_true()
)
source('C:/Users/a421356/R-GitHub/SCsim/tests/dest_test.R')
library(testthat)
source(file.path(getwd(), 'R', 'destObject.R'))
days.ex <- 100
char.pass.ex <- "test"
char.fail.ex <- 2
list.pass.ex <- list(mean = 2, sd = 4)
list.fail.ex <- list(mn = 2, stdev = 4)
numvec.pass.ex <- rep(x = 10, times = days.ex)
numvec.fail.ex <- rep(x = 10, times = (days.ex + 10))
context("Destination Data Import")
test_that("Import data is correctly filtered",
{
expect_that(
destination(.days = days.ex, .name = char.pass.ex, .region = char.pass.ex,
.actual = list.pass.ex, .expected = list.pass.ex),
is_true()
)
expect_that(
destination(.days = days.ex, .name = char.pass.ex, .region = char.pass.ex,
.actual = numvec.pass.ex, .expected = numvec.pass.ex),
is_true()
)
expect_that(
destination(.days = days.ex, .name = NULL, .region = NULL,
.actual = list.pass.ex, .expected = list.pass.ex),
is_true()
)
expect_that(
destination(.days = days.ex, .name = char.fail.ex, .region = char.pass.ex,
.actual = list.pass.ex, .expected = list.pass.ex),
gives_warning()
)
expect_that(
destination(.days = days.ex, .name = char.pass.ex, .region = char.fail.ex,
.actual = list.pass.ex, .expected = list.pass.ex),
gives_warning()
)
expect_that(
destination(.days = days.ex, .name = char.pass.ex, .region = char.pass.ex,
.actual = list.fail.ex, .expected = list.pass.ex),
gives_warning()
)
expect_that(
destination(.days = days.ex, .name = char.pass.ex, .region = char.pass.ex,
.actual = list.pass.ex, .expected = list.fail.ex),
gives_warning()
)
expect_that(
destination(.days = days.ex, .name = char.pass.ex, .region = char.pass.ex,
.actual = numvec.fail.ex, .expected = list.fail.ex),
gives_warning()
)
expect_that(
destination(.days = days.ex, .name = char.pass.ex, .region = char.pass.ex,
.actual = numvec.fail.ex, .expected = list.pass.ex),
gives_warning()
)
expect_that(
destination(.days = days.ex, .name = char.pass.ex, .region = char.pass.ex,
.actual = numvec.fail.ex, .expected = numvec.pass.ex),
gives_warning()
)
expect_that(
destination(.days = days.ex, .name = char.pass.ex, .region = char.pass.ex,
.actual = numvec.pass.ex, .expected = numvec.fail.ex),
gives_warning()
)
expect_that(
destination(.days = days.ex, .name = char.pass.ex, .region = char.pass.ex,
.actual = numvec.pass.ex, .expected = numvec.fail.ex),
gives_warning()
)
})
source('C:/Users/a421356/R-GitHub/SCsim/tests/dest_test.R')
.name <- 2
is.character(.name)
source('C:/Users/a421356/R-GitHub/SCsim/tests/dest_test.R')
stopifnot(is.character(.name))
source('C:/Users/a421356/R-GitHub/SCsim/tests/dest_test.R')
test_file('C:/Users/a421356/R-GitHub/SCsim/tests/dest_test.R')
source('C:/Users/a421356/R-GitHub/SCsim/tests/dest_test.R')
test_file('C:/Users/a421356/R-GitHub/SCsim/tests/dest_test.R')
source('C:/Users/a421356/R-GitHub/SCsim/tests/test-destination.R')
test_file('C:/Users/a421356/R-GitHub/SCsim/tests/test-destination.R')
test_dir('C:/Users/a421356/R-GitHub/SCsim/tests/')
library(testthat)
auto_test(
code_path = file.path(getwd(), 'R'),
test_path = file.path(getwd(), 'inst', 'tests')
)
lst <- list(high = 0.5, low = 0.5)
is.list(lst)
sum(lst)
lst[[1]] + lst[[2]]
sum(as.numeric(lst))
source('C:/Users/a421356/R-GitHub/SCsim/inst/tests/test-destination.R')
source('C:/Users/a421356/R-GitHub/SCsim/R/destObject.R')
source('C:/Users/a421356/R-GitHub/SCsim/inst/tests/test-destination.R')
destination(.days = days.ex, .name = char.pass.ex, .region = char.pass.ex,
.actual = list.pass.ex, .expected = list.pass.ex, .bias = bias.pass,
.schedule = schedule.pass)
source('C:/Users/a421356/R-GitHub/SCsim/R/destObject.R')
source('C:/Users/a421356/R-GitHub/SCsim/inst/tests/test-destination.R')
destination <- function(.days, .actual, .expected,
.bias = list(high = 0.5, low = 0.5),
.schedule = list(open = 6, ordering = 6),
.name = NULL, .region = NULL, .on_hand_inventory = NULL) {
# Error checking for required inputs --------------------------------------
stopifnot(length(.days) == 1); stopifnot(is.numeric(.days))
stopifnot(length(.bias) == 2); stopifnot(names(.bias) %in% c('high', 'low'));
stopifnot(sum(as.numeric(.bias)) == 1)
if (length (.actual) == 2) {
stopifnot(length(.actual) == 2 & is.list(.actual) & names(.actual) %in% c("mean", "sd"))
} else {
stopifnot(length(.actual) == .days & is.numeric(.actual))
}
if (length (.expected) == 2) {
stopifnot(length(.expected) == 2 & is.list(.expected) & names(.expected) %in% c("mean", "sd"))
} else {
stopifnot(length(.expected) == .days & is.numeric(.expected))
}
# Error checking for optional inputs --------------------------------------
if (is.null(.name)) {
.name <- "sample_name"
} else {
stopifnot(length(.name) == 1)
stopifnot(is.character(.name))
}
if (is.null(.region)) {
.region <- "sample_region"
} else {
stopifnot(length(.region) == 1)
stopifnot(is.character(.region))
}
if (is.null(.on_hand_inventory)) {
.on_hand_inventory <- numeric(length = .days)
} else {
stopifnot(length(.on_hand_inventory) == 1)
stopifnot(is.numeric(.on_hand_inventory))
.on_hand_inventory <- c(.on_hand_inventory, numeric(length = (.days - 1)))
}
if (is.null(.days_open_per_week)) {
.days_open_per_week = 6
} else {
stopifnot(length(.days_open_per_week) == 1)
stopifnot(is.numeric(.days_open_per_week))
}
if (is.null(.days_ordering_per_week)) {
.days_ordering_per_week = 6
} else {
stopifnot(length(.days_ordering_per_week) == 1)
stopifnot(is.numeric(.days_ordering_per_week))
}
# Return Statement --------------------------------------------------------
return(TRUE)
}
source('C:/Users/a421356/R-GitHub/SCsim/inst/tests/test-destination.R')
source(file.path(getwd(), 'R', 'destObject.R'))
source('C:/Users/a421356/R-GitHub/SCsim/inst/tests/test-destination.R')
expect_that(
destination(.days = days.ex, .name = char.pass.ex, .region = char.pass.ex,
.actual = list.pass.ex, .expected = list.pass.ex, .bias = bias.pass,
.schedule = schedule.pass),
is_true()
)
source('C:/Users/a421356/R-GitHub/SCsim/R/destObject.R')
source('C:/Users/a421356/R-GitHub/SCsim/inst/tests/test-destination.R')
source('C:/Users/a421356/R-GitHub/SCsim/R/destObject.R')
test_dir(file.path(getwd(), 'inst', 'tests'))
source('C:/Users/a421356/R-GitHub/SCsim/R/destObject.R')
source('C:/Users/a421356/R-GitHub/SCsim/inst/tests/test-destination.R')
source('C:/Users/a421356/R-GitHub/SCsim/R/destObject.R')
source('C:/Users/a421356/R-GitHub/SCsim/inst/tests/test-destination.R')
source('C:/Users/a421356/R-GitHub/SCsim/R/destObject.R')
source('C:/Users/a421356/R-GitHub/SCsim/inst/tests/test-destination.R')
test_file('C:/Users/a421356/R-GitHub/SCsim/inst/tests/test-destination.R')
test_dir('C:/Users/a421356/R-GitHub/SCsim/inst/tests/')
getwd()
source(file.path('~', 'R-GitHub', 'SCsim', 'R', 'destObject.R'))
source(file.path('~', 'Users', 'R-GitHub', 'SCsim', 'R', 'destObject.R'))
source('C:/Users/a421356/R-GitHub/SCsim/R/destObject.R')
test_dir('C:/Users/a421356/R-GitHub/SCsim/inst/tests/')
source('C:/Users/a421356/R-GitHub/SCsim/inst/tests/test-destination.R')
test_dir('C:/Users/a421356/R-GitHub/SCsim/inst/tests/')
expect_that(
destination(.days = days, .name = char.pass, .region = char.pass,
.actual = list.pass, .expected = list.pass, .bias = bias.pass,
.schedule = schedule.pass),
is_true()
)
expect_that(
destination(.days = days, .name = char.pass, .region = char.pass,
.actual = list.pass, .expected = list.pass, .bias = bias.pass,
.schedule = schedule.pass),
is_true()
#     is_a("destination")
)
destination(.days = days, .name = char.pass, .region = char.pass,
.actual = list.pass, .expected = list.pass, .bias = bias.pass,
.schedule = schedule.pass)
traceback()
